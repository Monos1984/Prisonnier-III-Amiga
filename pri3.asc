Rem =================================  
Rem * Nom .......... : Prisonnier 3 *      
Rem * Codeur ....... : Jean Monos   *  
Rem * Auteur ....... : M.Lorent     *  
Rem * Graphismes ... :              *  
Rem * Musiques ..... :              *
Rem * Version ...... : 3.0.0        *
Rem =================================

Rem ========== 
Rem * Divers * 
Rem ========== 
' Ouverture du projet .....: 03/05/2019
' modification du projet ..: 16/05/2020  
Rem -------------------------------------- 
Rem * déclaration des variables globales * 
Rem -------------------------------------- 

' - Gestion du Workflow -
Global G_SCENE$
Global G_ETAPE

' - Global IA- 
' 0 = jouer
' 1 = IA 
Global G_IA

' - Gestion du décalage X et Y du Board et PJ -
Global G_BDX,G_BDY

' - tableau T_Player pour les données des joueurs -
' 0,id Player = PX 
' 1,id player = PY 

Dim T_PLAYER(2,2)
Global T_PLAYER()

' - tableau de colision -
Dim T_COLISION(11,11)
Global T_COLISION()

Global G_CURSEUR_CASE

Rem ------------------------------ 
Rem * Configuration du programme * 
Rem ------------------------------ 
'  = décalage du board = 
G_BDX=(320-(11*16))/2
G_BDY=(200-(11*16))/2+12


Rem -------------------------- 
Rem * Lancement du programme * 
Rem -------------------------- 
P_INIT

Rem * Fin du programme * 
End 

Procedure P_OPEN_SCREEN
   
   Screen Open 0,320,200,16,Lowres
   Curs Off : Flash Off 
   Palette $0,$999,$FFF,$B23,$E68,$432,$A62,$E83,$FE6,$244,$481,$AC2,$123,$58,$3AF,$BDE
   Colour Back 0
   
   Paper 0
   Cls 
   Reserve Zone 1
   
End Proc


Rem ---------------------------
Rem * Initiation du programme *
Rem ---------------------------
Procedure P_INIT
   ' P_OPEN_SCREEN
   Load "media/bob.abk",1
   Load "media/icon.abk",2
   
   G_SCENE$="Title_screen"
   P_MAIN
   
End Proc

Rem ---------------------------------- 
Rem * Structure de base du programme * 
Rem ---------------------------------- 
Procedure P_MAIN
   
   ' -----------------
   ' * Boucle du jeu *
   ' -----------------    
   While(G_SCENE$<>"QUIT")
      
      If(G_SCENE$="Title_screen")
         P_TITLE_SCREEN
         
      Else If(G_SCENE$="GAME")
         P_GAME
         
      Else If(G_SCENE$="CREDIT")
         P_CREDIT
      End If 
      
      
   Wend 
   
End Proc

Rem ------------------------------ 
Rem * procedure game pour le jeu * 
Rem ------------------------------ 
Procedure P_GAME


Rem ---------------- 
Rem * P_Draw_board * 
Rem ---------------- 
Procedure P_DRAW_BOARD

Rem =======================  
Rem * Affichage du joueur *
Rem =======================
Procedure P_DRAW_PLAYER[ID_PLAYER]

Rem =========================================  
Rem * Initation des donnés des deux joueurs *  
Rem =========================================  
Procedure P_INIT_PLAYER

Rem =======================
Rem * Mouvement du joueur *
Rem =======================
Procedure P_MVT_PLAYER[ID_PLAYER]

Rem -------------------------
Rem * fonction poser un mur *
Rem -------------------------

Procedure P_DRAW_WALL


Rem ------------------------ 
Rem * Tester la fin du jeu * 
Rem ------------------------ 

Procedure P_END_GAME

Rem ---------------------------------------- 
Rem * Calcule des cases pour la fin du jeu * 
Rem ---------------------------------------- 
Procedure P_CALCULE_END[ID_PLAYER]

Rem -----------------
Rem * Titles Screen *
Rem -----------------
Procedure P_TITLE_SCREEN
   
   ' -------------------------- 
   ' * Preparation de l'écran * 
   ' -------------------------- 
   P_OPEN_SCREEN
   Wait Vbl 
   Led Off 
   Track Load "MEDIA/PRTITLE.MOD",6

   Load Iff "media/title_screen.iff"
   Wait Vbl 
   Track Play 6
   Track Loop On 
   ' ---------------------
   ' * menu de selection *
   ' ---------------------- 
   X=13
   Y=12
   Locate X,Y
   Print "(1) 1 player"
   Locate X,Y+1
   Print "(2) 2 players"
   Locate X,Y+2
   Print "(3) Credit"
   Locate X,Y+3
   Print "(4) Quit"
   
   ' ---------------------------
   ' * Petit crédit et version *
   ' ---------------------------
   
   Y=23
   Locate 0,Y
   
   
   Print "Offgame 2020"
   Locate 32,Y
   Print "1,0,0"
   
   
'   Save Iff "media/title_screen.iff"
   While(G_SCENE$="Title_screen")
      If Key State(29)=True or Key State(1)=True
         
         ' -----------------
         ' * mode 1 player *
         ' -----------------
         G_IA=1
         G_SCENE$="GAME"
         
         
      Else If Key State(30)=True or Key State(2)=True
         ' -----------------
         ' * mode 2 player *
         ' -----------------          
         G_IA=0
         G_SCENE$="GAME"
         
      Else If Key State(31)=True or Key State(3)=True
         ' ---------- 
         ' * credit * 
         ' ---------- 
         G_SCENE$="CREDIT"
         
      Else If Key State(45)=True or Key State(4)=True or Key State(69)=True
         ' -------- 
         ' * quit * 
         ' -------- 
         Track Stop 
         Erase All 
         End 
         
      End If 
      
      
      
      Wait Vbl 
      
      
      
      
      
   Wend 
   
   
   
   
   
   
   
End Proc


Rem -------------
Rem * Game Over *
Rem -------------
Procedure P_GAME_OVER[ID_WIN]



Rem ---------------------- 
Rem * Evenement Aleatoir * 
Rem ---------------------- 
Procedure P_EVENT



Rem -----------------
Rem * mur aleatoire *
Rem -----------------
Procedure P_RANDOM_WALL


Rem ---------------------------------
Rem * Deplacement aleatoire de l'ia *
Rem ---------------------------------
Procedure P_DEP_IA


Rem -----------------------
Rem * pose du mur de l'ia *
Rem -----------------------
Procedure P_DRAW_IA_WELL[PX,PY]

Rem -------------------------
Rem * Case temoin mouvement *
Rem -------------------------
Procedure P_MVT_CASE[PX,PY,ID_TILES]
   
   
   If T_COLISION(PX,PY-1)=0
      Paste Icon PX*16+G_BDX,PY*16+G_BDY-16,ID_TILES
      
   End If 
   
   If T_COLISION(PX+1,PY-1)=0
      Paste Icon PX*16+G_BDX+16,PY*16+G_BDY-16,ID_TILES
      
   End If 
   
   
   If T_COLISION(PX+1,PY)=0
      Paste Icon PX*16+G_BDX+16,PY*16+G_BDY,ID_TILES
      
   End If 
   
   
   If T_COLISION(PX+1,PY+1)=0
      Paste Icon PX*16+G_BDX+16,PY*16+G_BDY+16,ID_TILES
      
   End If 
   
   
   If T_COLISION(PX,PY+1)=0
      Paste Icon PX*16+G_BDX,PY*16+G_BDY+16,ID_TILES
   End If 
   
   If T_COLISION(PX-1,PY+1)=0
      Paste Icon PX*16+G_BDX-16,PY*16+G_BDY+16,ID_TILES
   End If 
   
   
   If T_COLISION(PX-1,PY)=0
      Paste Icon PX*16+G_BDX-16,PY*16+G_BDY,ID_TILES
      
   End If 
   
   
   If T_COLISION(PX-1,PY-1)=0
      Paste Icon PX*16+G_BDX-16,PY*16+G_BDY-16,ID_TILES
      
   End If 
   
   
End Proc


Rem -----------------
Rem * Credit du jeu *
Rem -----------------
Procedure P_CREDIT
   
   
   Cls 
   Locate 13,0
   Print "PRISONNIER III"
   
   Locate 2,6
   Print "Author ....... : Emmanuel Lorand"
   
   Locate 2,7
   Print "Based On ..... : Isola (Bernd Kienitz)"
   
   Locate 2,8
   Print "Programming .. : Loïc Lété"
   Locate 2,9
   Print "Music ........ : Loïc Lété"
   Locate 2,10
   Print "Graphics ..... : Loïc Lété"
   
   Locate 2,11
   Print "               : Usr_Shares"
   Locate 2,12
   Print "Game Engine .. : Amos Pro"
   Locate 2,13
   Print "               : François Lionet"
   
   
   
   While(Key State(69)=False)
      Locate 6,15
      Cline 
      
      If CYCLE<24
         Print "Press ESC for Start Menu"
      End If 
      
      CYCLE=CYCLE+1
      If CYCLE>48
         CYCLE=0
      End If 
      Wait Vbl 
      
   Wend 
   G_SCENE$="Title_screen"
   Cls 
   
End Proc



